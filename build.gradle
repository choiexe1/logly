plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'app'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    /**
     * https://mvnrepository.com/artifact/com.password4j/password4j
     * 패스워드 암호화를 위한 라이브러리
     */
    implementation 'com.password4j:password4j:1.8.2'

    /**
     * 자바 메일 센더
     */
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    /**
     * 스프링 cache 추상화
     */
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    /**
     * Caffeine
     */
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
}

tasks.named('test') {
    useJUnitPlatform()
}
